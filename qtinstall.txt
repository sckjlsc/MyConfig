第一步   安装QT Library：

1、诺基亚把QT卖给Digia后，QT商业版和开源版就分开了，开源版全部放在QT Project网站上，从该网站下载qt-everywhere-opensource-src-4.8.1.tar.gz。可以在Ubuntu里面使用Firefox浏览器下载，默认下载目录是/home/your name/Downloads，使用终端cd到Downloads目录，然后使用命令

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
tar xzvf qt-everywhere-opensource-src-4.8.1.tar.gz  

解压软件包，解压完后，cd到该目录

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
cd qt-everywhere-opensource-src-4.8.1  

2、我的电脑在Ubuntu 10.04.4环境下，没有安装g++，编译QT要用到g++，所以首先安装g++，使用apt-get命令安装g++，

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
sudo apt-get install g++  

3、然后需要安装libX11-dev libXext-dev libXtst-dev这三个包，这点非常重要，很多朋友因为没有安装这三个包而出现以下错误，

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
Basic XLib functionality test failed!  
You might need to modify the include and library search paths by editing  
QMAKE_INCDIR_X11 and QMAKE_LIBDIR_X11 in /home/your name/Qt/qt-x11-opensource-src-4.8.1/mkspecs/linux-g++  

使用apt-get安装这三个包，

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
sudo apt-get install libX11-dev libXext-dev libXtst-dev  

4、如果你的Ubuntu已经安装g++和libX11-dev libXext-dev libXtst-dev，可以跳过2，3两步。在进入qt-everywhere-opensource-src-4.8.1目录后，使用如下命令配置QT Library，

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
./configure  

注意不能直接输入configure，必须加上 "./" 才可以。然后终端会出现让你选择商业版还是开源版，输入字母o选择开源版。然后会有协议让你接受，输入yes就OK啦。

5、经过漫长地等待后，终端会出现如下信息，
[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
Qt  is now configured for building ,just run 'make'  
Once everything is built , you must run 'make  install'  
Qt will be installed into /usr/local/Qt-4.8.1  
To  reconfigure ,run 'make confclean' and 'configure'  

然后输入make，这样会生成QT库，同时编译所有演示程序。

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
make  

6、QT编译完成后，输入make install来安装QT，注意make install需要root权限，所以要加sudo。

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
sudo make install  

7、经过漫长等待，QT安装完毕后，首先进入QT安装目录测试QT是否安装成功，QT默认安装在/usr/local/Trolltech/Qt-4.8.1目录里面，所以先进入该目录，

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
cd /usr/local/Trolltech/Qt-4.8.1  

然后在进入qmake所在的bin文件夹，

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
cd bin  

然后输入qmake，如果出现正常的信息，则表明QT已经安装成功。或者输入以下指令，

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
qmake -v  

如果出现正确的版本信息，则表示安装成功了。

8、接下来要设置环境变量，设置环境变量的目的是为了在任何目录下都可以使用QT。首先需要设置用户环境变量，
[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
gedit /home/your name/.bashrc   

然后会弹出一个编辑窗口，在末尾添加以下代码，

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
export QTDIR=/usr/local/Trolltech/Qt-4.8.1   
export PATH=$QTDIR/bin:$PATH   
export MANPATH=$QTDIR/man:$MANPATH   
export LD_LIBRARY_PATH=$QTDIR/lib:$LD_LIBRARY_PATH  

然后设置root用户的环境变量，设置root用户的环境变量需要root权限，所以要加sudo，

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
sudo gedit /etc/profile  

然后会弹出一个编辑窗口，在末尾添加以下代码，

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
export QTDIR=/usr/local/Trolltech/Qt-4.8.1   
export PATH=$QTDIR/bin:$PATH   
export MANPATH=$QTDIR/man:$MANPATH   
export LD_LIBRARY_PATH=$QTDIR/lib:$LD_LIBRARY_PATH  

保存后退出，然后重启电脑。

9、卸载：
cd programfilename
sudo make uninstall
cd ..
rm -r programfilename programfilename.tar.gz

第二步   安装QT Creator：

相比QT Library，QT Creator的安装要简单的多，我们下载的bin文件是可执行文件，安装时会出现像在Windows下的界面，安装路径默认就可以了。使用终端cd到Downloads目录，首先修改bin文件的权限使其具有可执行的权限，

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
chmod a+x qt-creator-linux-x86-opensource-2.4.1.bin  

然后输入以下命令安装bin文件，

[plain] view plaincopyprint?在CODE上查看代码片派生到我的代码片
./qt-creator-linux-x86-opensource-2.4.1.bin  

至此，QT已经安装完毕，打开桌面上的QT Creator来运行一个demo测试吧！

Qt 5
chmod +x ./qt-linux-opensource-5.2.0-x86_64-offline.run  
./qt-linux-opensource-5.2.0-x86_64-offline.run 
uninstall
open terminal,

go to the installed directory, and then

run MaintenanceTools by the following command

./MaintenanceTool
and it is done.....

也就是打开终端，进入到安装目录下，找到

MaintenanceTool
这个工具，执行就ok了

二、创建Qt项目

1、创建项目。在Ubuntu下运行Qt Creator效果如下图所示。


2、我们选择“文件→新建项目”菜单项，然后选择创建Qt Widgets Application项目。


3、在项目名称处，我们输入“helloqt”。不过最新安装的Ubuntu上的输入法默认使用双拼，对于没有使用过的同学来说，很是不习惯。


4、设置输入法。我们点击Ubuntu桌面右上角的“拼”图标，选择“首选项”，然后设置拼音模式。



这里可以看到，现在已经选中全拼模式了。不过要想让其生效，必须注销系统或者重启系统。我们点击右上角的图标，然后选择注销系统。

5、创建Qt Creator快捷方式。重新登录系统后，我们需要再次启动安装的Qt Creator，因为桌面上没有快捷方式，所以需要到安装目录去执行。我们按照下图提示，首先打开Qt Creator所在目录，即/home/yafei/Qt 5.4.0/Tools/QtCreator/bin，这里可以直接双击qtcreator图标来运行它。不过，为了方便以后操作，我们为其创建桌面快捷方式。在qtcreator图标上右击，选择“创建链接”，然后将创建好的链接拖到Ubuntu桌面上。以后直接双击桌面上的链接就可以执行Qt Creator了。


6、继续创建项目。再次打开Qt Creator后，我们按照前面的方式创建项目，并且输入项目名称helloqt。


在Kit Selection界面，保持默认的Qt 5.4.0桌面版即可。



在类信息界面，这里不做更改，使用默认的主窗口类QMainWindow。


最后是项目管理信息，这里不做更改，点击“完成”按钮完成项目创建。


7、运行程序。项目创建完成以后，点击运行按钮或者按下Ctrl+R快捷键编译运行程序。


8、这时会发现程序无法编译，在“问题”栏中显示“Qt Creator needs a compiler set up to build. Configure a compiler inthe kit options”，表明现在没有可用的编译器。



9、我们打开“工具→选项”菜单项，在“构建和运行”界面可以看到没有可用的编译局。


三、设置编译器

1、为了解决这个问题，我们在Qt帮助中索引“Qt forLinux”关键字，这里可以看到，在Ubuntu系统中需要安装必要的工具文件，并且给出了相关的命令代码。


2、使用命令行安装文件。我们按下Ctrl+ALT+T快捷键打开终端，在系统首次安装新程序以前，首先要更新源列表，所以输入如下命令：
sudo apt-get update
然后输入密码。（注意，要进行下面的步骤，必须联网）


3、完成后，执行下面的命令：
sudo apt-get install build-essential libgl1-mesa-dev


在看到“您希望继续执行吗？”提示后，输入y，然后按下回车键继续执行。


4、现在再次查看“工具→选项”菜单项，可以看到，编译器已经自动检测到了。


构建套件已经显示正常了。


5、再次运行前面创建的项目，已经可以正常运行了。


到这里，我们完成了Ubuntu系统上Qt开发环境的创建，可以开始Qt程序的开发了
但却发现没办法输入中文,

1.安装fcitx-frontend-qt5

sudo apt-get install fcitx-frontend-qt5

2.将安装后的fcitx-frontend-qt5复制到qt安装目录

通常，fcitx-frontend-qt5在下面的目录路径中（可用命令dpkg -L 包名看文件安装路径)：
cp /usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so /home/zeno/Qt5.4.1/Tools/QtCreator/bin/plugins/platforminputcontexts/
cp /usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so /home/zeno/Qt5.4.1/5.4/gcc_64/plugins/platforminputcontexts/
chmod +x /home/zeno/Qt5.4.1/Tools/QtCreator/bin/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so

chmod +x /home/zeno/Qt5.4.1/5.4/gcc_64/plugins/platforminputcontexts/libibusplatforminputcontextplugin.so

重新打开 QtCreator,终于可以输入中文了。

上诉方法也支持ibus

其实很多qt编写的程序无法输入中文，将fcitx-frontend-qt5复制到该程序相应的目录下，就可以正常了，如wps和linux 下的代码阅读软件 understand，用这种方法都解决了输入法无法输入中文的问题